import styled from 'styled-components';
import { ContainerProps } from './interfaces';

export const Container = styled.div<ContainerProps>(props => ({
  display: props.display,
  position: props.position,
  flexDirection: props.direction,
  alignItems: props.alignItems,
  justifyContent: props.justify,
  flex: props.flex,
  width: props.width,
  height: props.height,
  minWidth: props.minWidth,
  minHeight: props.minHeight,
  maxWidth: props.maxWidth,
  maxHeight: props.maxHeight,
  zIndex: props.zIndex,
  gap: props.gap,
  backgroundColor: props.bgColor ? props.theme.colors[props.bgColor] : 'none',
  borderRadius: props.borderRadius,
  margin: props.margin,
  padding: props.padding,
  marginTop: props.mt,
  marginRight: props.mr,
  marginBottom: props.mb,
  marginLeft: props.ml,
  paddingTop: props.pt,
  paddingRight: props.pr,
  paddingBottom: props.pb,
  paddingLeft: props.pl,

  ...((props.borderWidth && props.borderColor) && {
    border: `${props.borderWidth}px solid ${props.theme.colors[props.borderColor]}`,
  }),
  ...((props.borderBottom && props.borderColor) && {
    borderBottom: `${props.borderBottom}px solid ${props.theme.colors[props.borderColor]}`,
  }),
  ...((props.borderTop && props.borderColor) && {
    borderTop: `${props.borderTop}px solid ${props.theme.colors[props.borderColor]}`,
  }),
  ...((props.borderLeft && props.borderColor) && {
    borderLeft: `${props.borderLeft}px solid ${props.theme.colors[props.borderColor]}`,
  }),
  ...((props.borderRight && props.borderColor) && {
    borderRight: `${props.borderRight}px solid ${props.theme.colors[props.borderColor]}`,
  }),

  ...(props.sm && ({
    '@media only screen and (width > 768px)': {
      display: props.sm.display,
      flexDirection: props.sm.direction,
      alignItems: props.sm.alignItems,
      justifyContent: props.sm.justify,
      flex: props.sm.flex,
      width: props.sm.width,
      height: props.sm.height,
      minWidth: props.sm.minWidth,
      minHeight: props.sm.minHeight,
      maxWidth: props.sm.maxWidth,
      maxHeight: props.sm.maxHeight,
      gap: props.sm.gap,
      margin: props.sm.margin,
      padding: props.sm.padding,
      marginTop: props.sm.mt,
      marginRight: props.sm.mr,
      marginBottom: props.sm.mb,
      marginLeft: props.sm.ml,
      paddingTop: props.sm.pt,
      paddingRight: props.sm.pr,
      paddingBottom: props.sm.pb,
      paddingLeft: props.sm.pl,
    }
  })),
  ...(props.md && ({
    '@media only screen and (width > 992px)': {
      display: props.md.display,
      flexDirection: props.md.direction,
      alignItems: props.md.alignItems,
      justifyContent: props.md.justify,
      flex: props.md.flex,
      width: props.md.width,
      height: props.md.height,
      minWidth: props.md.minWidth,
      minHeight: props.md.minHeight,
      maxWidth: props.md.maxWidth,
      maxHeight: props.md.maxHeight,
      gap: props.md.gap,
      margin: props.md.margin,
      padding: props.md.padding,
      marginTop: props.md.mt,
      marginRight: props.md.mr,
      marginBottom: props.md.mb,
      marginLeft: props.md.ml,
      paddingTop: props.md.pt,
      paddingRight: props.md.pr,
      paddingBottom: props.md.pb,
      paddingLeft: props.md.pl,
    }
  })),
}));

Container.defaultProps = {
  display: 'flex',
  position: undefined,
  direction: 'column',
  alignItems: 'flex-start',
  justify: 'flex-start',
  flex: undefined,
  width: undefined,
  height: undefined,
  minWidth: undefined,
  minHeight: undefined,
  maxWidth: undefined,
  maxHeight: undefined,
  zIndex: undefined,
  gap: undefined,
  bgColor: undefined,
  borderWidth: undefined,
  borderColor: undefined,
  borderRadius: undefined,
  margin: 0,
  padding: 0,
  mt: undefined,
  mr: undefined,
  mb: undefined,
  ml: undefined,
  pt: undefined,
  pr: undefined,
  pb: undefined,
  pl: undefined,
  sm: undefined,
  md: undefined,
};